classDiagram
    direction TB
    class AdvancedAutonomousTrainer:::high-complexity
    AdvancedAutonomousTrainer : +complexity: 13
    AdvancedAutonomousTrainer : ğŸ”’__init__(self, chatbot)
    AdvancedAutonomousTrainer : ğŸ”“initialize_dynamic_scenarios(self)
    AdvancedAutonomousTrainer : ğŸ”“fetch_real_time_data(self)
    AdvancedAutonomousTrainer : ğŸ”“analyze_market_sentiment(self, market_data)
    AdvancedAutonomousTrainer : ğŸ”“generate_contextual_training_data(self, real_time_data)
    AdvancedAutonomousTrainer : ğŸ”“self_evaluate_response(self, question, response)
    AdvancedAutonomousTrainer : ğŸ”“continuous_learning_cycle(self)
    AdvancedAutonomousTrainer : ğŸ”“analyze_learning_progress(self)
    AdvancedAutonomousTrainer : ğŸ”“adapt_training_parameters(self)
    AdvancedAutonomousTrainer : ğŸ”“start_autonomous_training(self)
    AdvancedAutonomousTrainer : ğŸ”“stop_autonomous_training(self)
    AdvancedAutonomousTrainer : ğŸ”“get_training_statistics(self)
    AdvancedAutonomousTrainer : ğŸ”“export_training_data(self, filename)
    class AdvancedDiagramGenerator:::medium-complexity
    AdvancedDiagramGenerator : +complexity: 10
    AdvancedDiagramGenerator : ğŸ”’__init__(self, project_root)
    AdvancedDiagramGenerator : ğŸ”“scan_project(self)
    AdvancedDiagramGenerator : ğŸ”“analyze_file(self, file_path)
    AdvancedDiagramGenerator : ğŸ”“generate_enhanced_class_diagram(self)
    AdvancedDiagramGenerator : ğŸ”“generate_architecture_flow_diagram(self)
    AdvancedDiagramGenerator : ğŸ”“generate_interaction_sequence(self)
    AdvancedDiagramGenerator : ğŸ”“generate_complexity_heatmap(self)
    AdvancedDiagramGenerator : ğŸ”“generate_dependency_network(self)
    AdvancedDiagramGenerator : ğŸ”“export_diagrams(self)
    AdvancedDiagramGenerator : ğŸ”“generate_interactive_html(self)
    class CodeVisitor:::medium-complexity
    CodeVisitor : +complexity: 6
    CodeVisitor : ğŸ”’__init__(self, filename)
    CodeVisitor : ğŸ”“visit_ClassDef(self, node)
    CodeVisitor : ğŸ”“visit_FunctionDef(self, node)
    CodeVisitor : ğŸ”“visit_Import(self, node)
    CodeVisitor : ğŸ”“visit_ImportFrom(self, node)
    CodeVisitor : ğŸ”’_calculate_complexity(self, node)
    Unknown <|-- CodeVisitor
    class AdvancedTrainingSystem:::high-complexity
    AdvancedTrainingSystem : +complexity: 13
    AdvancedTrainingSystem : ğŸ”’__init__(self, chatbot_instance)
    AdvancedTrainingSystem : ğŸ”“start_background_training(self)
    AdvancedTrainingSystem : ğŸ”“stop_background_training(self)
    AdvancedTrainingSystem : ğŸ”’_background_training_loop(self)
    AdvancedTrainingSystem : ğŸ”“record_interaction(self, user_input, bot_response...)
    AdvancedTrainingSystem : ğŸ”“assess_interaction_quality(self, interaction)
    AdvancedTrainingSystem : ğŸ”“collect_user_feedback(self, interaction_index, satisfaction_rating...)
    AdvancedTrainingSystem : ğŸ”“train_from_interactions(self)
    AdvancedTrainingSystem : ğŸ”“save_training_session(self, training_data)
    AdvancedTrainingSystem : ğŸ”“optimize_trainer_parameters(self)
    AdvancedTrainingSystem : ğŸ”“get_success_rate(self)
    AdvancedTrainingSystem : ğŸ”“get_training_statistics(self)
    AdvancedTrainingSystem : ğŸ”“manual_training_cycle(self)
    class CryptoAPIs:::low-complexity
    CryptoAPIs : +complexity: 4
    CryptoAPIs : ğŸ”’__init__(self)
    CryptoAPIs : ğŸ”“initialize_apis(self)
    CryptoAPIs : ğŸ”“get_markets_data(self)
    CryptoAPIs : ğŸ”“get_coin_price(self, coin_id)
    class AutonomousTrainingSystem:::high-complexity
    AutonomousTrainingSystem : +complexity: 17
    AutonomousTrainingSystem : ğŸ”’__init__(self, chatbot)
    AutonomousTrainingSystem : ğŸ”“generate_training_scenarios(self)
    AutonomousTrainingSystem : ğŸ”“start_autonomous_training(self)
    AutonomousTrainingSystem : ğŸ”“stop_autonomous_training(self)
    AutonomousTrainingSystem : ğŸ”’_training_loop(self)
    AutonomousTrainingSystem : ğŸ”’_run_training_session(self)
    AutonomousTrainingSystem : ğŸ”’_evaluate_response_quality(self, question, response...)
    AutonomousTrainingSystem : ğŸ”’_attempt_improvement(self, question, response...)
    AutonomousTrainingSystem : ğŸ”’_generate_question_variations(self, question)
    AutonomousTrainingSystem : ğŸ”’_measure_accuracy(self)
    AutonomousTrainingSystem : ğŸ”’_save_training_progress(self)
    AutonomousTrainingSystem : ğŸ”“get_training_status(self)
    AutonomousTrainingSystem : ğŸ”“get_improvement_recommendations(self)
    AutonomousTrainingSystem : ğŸ”“record_interaction(self, user_input, bot_response...)
    AutonomousTrainingSystem : ğŸ”“get_training_statistics(self)
    AutonomousTrainingSystem : ğŸ”“get_recent_activities(self)
    AutonomousTrainingSystem : ğŸ”“run_single_training_iteration(self)
    class CodeAnalyzer:::high-complexity
    CodeAnalyzer : +complexity: 11
    CodeAnalyzer : ğŸ”’__init__(self, project_root)
    CodeAnalyzer : ğŸ”“scan_project(self)
    CodeAnalyzer : ğŸ”“analyze_file(self, file_path)
    CodeAnalyzer : ğŸ”“analyze_class(self, node)
    CodeAnalyzer : ğŸ”“analyze_function(self, node)
    CodeAnalyzer : ğŸ”“analyze_import(self, node)
    CodeAnalyzer : ğŸ”“generate_class_diagram_mermaid(self)
    CodeAnalyzer : ğŸ”“generate_dependency_graph_mermaid(self)
    CodeAnalyzer : ğŸ”“generate_file_structure_mermaid(self)
    CodeAnalyzer : ğŸ”“generate_call_flow_diagram(self, entry_point)
    CodeAnalyzer : ğŸ”“export_analysis_report(self, output_file)
    class CryptoNewsInsights:::medium-complexity
    CryptoNewsInsights : +complexity: 9
    CryptoNewsInsights : ğŸ”’__init__(self)
    CryptoNewsInsights : ğŸ”“get_latest_news(self, topic, limit)
    CryptoNewsInsights : ğŸ”’_fetch_coingecko_news(self, topic, limit)
    CryptoNewsInsights : ğŸ”’_get_mock_news(self, topic, limit)
    CryptoNewsInsights : ğŸ”“analyze_sentiment(self, text)
    CryptoNewsInsights : ğŸ”“get_market_insights(self, personality)
    CryptoNewsInsights : ğŸ”’_generate_enhanced_normal_insights(self, articles, strong_bull...)
    CryptoNewsInsights : ğŸ”’_generate_enhanced_subzero_insights(self, articles, strong_bull...)
    CryptoNewsInsights : ğŸ”“get_specific_coin_news(self, coin, personality)
    class DualPersonalityAdvancedTrainer:::high-complexity
    DualPersonalityAdvancedTrainer : +complexity: 16
    DualPersonalityAdvancedTrainer : ğŸ”’__init__(self, chatbot)
    DualPersonalityAdvancedTrainer : ğŸ”“create_normal_personality_scenarios(self)
    DualPersonalityAdvancedTrainer : ğŸ”“create_subzero_personality_scenarios(self)
    DualPersonalityAdvancedTrainer : ğŸ”“create_shared_scenarios(self)
    DualPersonalityAdvancedTrainer : ğŸ”“fetch_enhanced_market_data(self)
    DualPersonalityAdvancedTrainer : ğŸ”“analyze_market_conditions(self, market_data)
    DualPersonalityAdvancedTrainer : ğŸ”“generate_personality_specific_training(self, personality, market_data)
    DualPersonalityAdvancedTrainer : ğŸ”“evaluate_personality_response(self, question, response...)
    DualPersonalityAdvancedTrainer : ğŸ”“cross_personality_training_cycle(self)
    DualPersonalityAdvancedTrainer : ğŸ”“intensive_dual_training_cycle(self)
    DualPersonalityAdvancedTrainer : ğŸ”“calculate_learning_velocities(self)
    DualPersonalityAdvancedTrainer : ğŸ”“report_training_progress(self, cycle_count)
    DualPersonalityAdvancedTrainer : ğŸ”“start_intensive_training(self)
    DualPersonalityAdvancedTrainer : ğŸ”“stop_training(self)
    DualPersonalityAdvancedTrainer : ğŸ”“get_comprehensive_stats(self)
    DualPersonalityAdvancedTrainer : ğŸ”“export_dual_training_data(self, filename)
    class SessionManager:::low-complexity
    SessionManager : +complexity: 5
    SessionManager : ğŸ”’__init__(self)
    SessionManager : ğŸ”“create_session(self, session_id)
    SessionManager : ğŸ”“get_session(self, session_id)
    SessionManager : ğŸ”“update_session(self, session_id, data)
    SessionManager : ğŸ”“cleanup_expired_sessions(self)
    class RateLimiter:::low-complexity
    RateLimiter : +complexity: 2
    RateLimiter : ğŸ”’__init__(self)
    RateLimiter : ğŸ”“is_allowed(self, client_id)
    class ChatRequest:::low-complexity
    ChatRequest : +complexity: 0
    BaseModel <|-- ChatRequest
    class ChatResponse:::low-complexity
    ChatResponse : +complexity: 0
    BaseModel <|-- ChatResponse
    class PersonalityRequest:::low-complexity
    PersonalityRequest : +complexity: 0
    BaseModel <|-- PersonalityRequest
    class SessionInfo:::low-complexity
    SessionInfo : +complexity: 0
    BaseModel <|-- SessionInfo
    class ConnectionManager:::low-complexity
    ConnectionManager : +complexity: 2
    ConnectionManager : ğŸ”’__init__(self)
    ConnectionManager : ğŸ”“disconnect(self, websocket)
    class PureNormalTrainer:::high-complexity
    PureNormalTrainer : +complexity: 13
    PureNormalTrainer : ğŸ”’__init__(self, dataset_file)
    PureNormalTrainer : ğŸ”“load_dataset(self)
    PureNormalTrainer : ğŸ”“tokenize_text(self, text)
    PureNormalTrainer : ğŸ”“text_to_vector(self, text)
    PureNormalTrainer : ğŸ”“cosine_similarity_custom(self, vec1, vec2)
    PureNormalTrainer : ğŸ”“build_similarity_model(self)
    PureNormalTrainer : ğŸ”“try_keyword_matching(self, user_input)
    PureNormalTrainer : ğŸ”“get_real_time_price(self, coin_name)
    PureNormalTrainer : ğŸ”“get_coin_information(self, coin_name)
    PureNormalTrainer : ğŸ”“find_best_response(self, user_input, threshold)
    PureNormalTrainer : ğŸ”“get_smart_fallback(self, user_input)
    PureNormalTrainer : ğŸ”“get_response(self, user_input)
    PureNormalTrainer : ğŸ”“get_training_info(self)
    class PureNormalTrainer:::high-complexity
    PureNormalTrainer : +complexity: 13
    PureNormalTrainer : ğŸ”’__init__(self, dataset_file)
    PureNormalTrainer : ğŸ”“load_dataset(self)
    PureNormalTrainer : ğŸ”“tokenize_text(self, text)
    PureNormalTrainer : ğŸ”“text_to_vector(self, text)
    PureNormalTrainer : ğŸ”“cosine_similarity_custom(self, vec1, vec2)
    PureNormalTrainer : ğŸ”“build_similarity_model(self)
    PureNormalTrainer : ğŸ”“try_keyword_matching(self, user_input)
    PureNormalTrainer : ğŸ”“get_real_time_price(self, coin_name)
    PureNormalTrainer : ğŸ”“get_coin_information(self, coin_name)
    PureNormalTrainer : ğŸ”“find_best_response(self, user_input, threshold)
    PureNormalTrainer : ğŸ”“get_smart_fallback(self, user_input)
    PureNormalTrainer : ğŸ”“get_response(self, user_input)
    PureNormalTrainer : ğŸ”“get_training_info(self)
    class DOTDiagramGenerator:::medium-complexity
    DOTDiagramGenerator : +complexity: 7
    DOTDiagramGenerator : ğŸ”’__init__(self, project_root)
    DOTDiagramGenerator : ğŸ”“scan_project(self)
    DOTDiagramGenerator : ğŸ”“generate_class_hierarchy_dot(self)
    DOTDiagramGenerator : ğŸ”“generate_module_dependency_dot(self)
    DOTDiagramGenerator : ğŸ”“generate_system_architecture_dot(self)
    DOTDiagramGenerator : ğŸ”“export_dot_files(self)
    DOTDiagramGenerator : ğŸ”“generate_conversion_script(self)
    class DOTVisitor:::low-complexity
    DOTVisitor : +complexity: 5
    DOTVisitor : ğŸ”’__init__(self, filename)
    DOTVisitor : ğŸ”“visit_ClassDef(self, node)
    DOTVisitor : ğŸ”“visit_FunctionDef(self, node)
    DOTVisitor : ğŸ”“visit_Import(self, node)
    DOTVisitor : ğŸ”“visit_ImportFrom(self, node)
    Unknown <|-- DOTVisitor
    class ImprovedDualPersonalityChatbot:::medium-complexity
    ImprovedDualPersonalityChatbot : +complexity: 10
    ImprovedDualPersonalityChatbot : ğŸ”’__init__(self)
    ImprovedDualPersonalityChatbot : ğŸ”“initialize_trainers(self)
    ImprovedDualPersonalityChatbot : ğŸ”“initialize_news_service(self)
    ImprovedDualPersonalityChatbot : ğŸ”“switch_personality(self, mode)
    ImprovedDualPersonalityChatbot : ğŸ”“get_crypto_news_context(self, user_input)
    ImprovedDualPersonalityChatbot : ğŸ”“get_response(self, user_input)
    ImprovedDualPersonalityChatbot : ğŸ”“get_system_info(self)
    ImprovedDualPersonalityChatbot : ğŸ”“get_conversation_history(self)
    ImprovedDualPersonalityChatbot : ğŸ”“clear_history(self)
    ImprovedDualPersonalityChatbot : ğŸ”“get_learning_statistics(self)
    class ImprovedDualPersonalityChatbot:::medium-complexity
    ImprovedDualPersonalityChatbot : +complexity: 10
    ImprovedDualPersonalityChatbot : ğŸ”’__init__(self)
    ImprovedDualPersonalityChatbot : ğŸ”“initialize_trainers(self)
    ImprovedDualPersonalityChatbot : ğŸ”“initialize_news_service(self)
    ImprovedDualPersonalityChatbot : ğŸ”“switch_personality(self, mode)
    ImprovedDualPersonalityChatbot : ğŸ”“get_crypto_news_context(self, user_input)
    ImprovedDualPersonalityChatbot : ğŸ”“get_response(self, user_input)
    ImprovedDualPersonalityChatbot : ğŸ”“get_system_info(self)
    ImprovedDualPersonalityChatbot : ğŸ”“get_conversation_history(self)
    ImprovedDualPersonalityChatbot : ğŸ”“clear_history(self)
    ImprovedDualPersonalityChatbot : ğŸ”“get_learning_statistics(self)
    class ChatRequest:::low-complexity
    ChatRequest : +complexity: 0
    BaseModel <|-- ChatRequest
    class ChatResponse:::low-complexity
    ChatResponse : +complexity: 0
    BaseModel <|-- ChatResponse
    class PersonalityRequest:::low-complexity
    PersonalityRequest : +complexity: 0
    BaseModel <|-- PersonalityRequest
    class KoinTossProductionTest:::medium-complexity
    KoinTossProductionTest : +complexity: 8
    KoinTossProductionTest : ğŸ”’__init__(self)
    KoinTossProductionTest : ğŸ”“test_chatbot_core(self)
    KoinTossProductionTest : ğŸ”“test_autonomous_training(self)
    KoinTossProductionTest : ğŸ”“test_api_imports(self)
    KoinTossProductionTest : ğŸ”“test_data_sources(self)
    KoinTossProductionTest : ğŸ”“test_training_functionality(self)
    KoinTossProductionTest : ğŸ”“test_file_integrity(self)
    KoinTossProductionTest : ğŸ”“run_all_tests(self)
    class PureNormalTrainer:::medium-complexity
    PureNormalTrainer : +complexity: 7
    PureNormalTrainer : ğŸ”’__init__(self, dataset_file)
    PureNormalTrainer : ğŸ”“load_dataset(self)
    PureNormalTrainer : ğŸ”“load_json_dataset(self)
    PureNormalTrainer : ğŸ”“load_text_dataset(self)
    PureNormalTrainer : ğŸ”“build_similarity_model(self)
    PureNormalTrainer : ğŸ”“find_best_response(self, user_input, threshold)
    PureNormalTrainer : ğŸ”“get_training_stats(self)
    class PureSubZeroTrainer:::medium-complexity
    PureSubZeroTrainer : +complexity: 10
    PureSubZeroTrainer : ğŸ”’__init__(self, dataset_file)
    PureSubZeroTrainer : ğŸ”“tokenize_text(self, text)
    PureSubZeroTrainer : ğŸ”“text_to_vector(self, text)
    PureSubZeroTrainer : ğŸ”“cosine_similarity_custom(self, vec1, vec2)
    PureSubZeroTrainer : ğŸ”“load_dataset(self)
    PureSubZeroTrainer : ğŸ”“build_similarity_model(self)
    PureSubZeroTrainer : ğŸ”“find_best_response(self, user_input, threshold)
    PureSubZeroTrainer : ğŸ”“get_subzero_fallback(self, user_input)
    PureSubZeroTrainer : ğŸ”“get_response(self, user_input)
    PureSubZeroTrainer : ğŸ”“get_training_info(self)
    class PureSubZeroTrainer:::low-complexity
    PureSubZeroTrainer : +complexity: 5
    PureSubZeroTrainer : ğŸ”’__init__(self, dataset_file)
    PureSubZeroTrainer : ğŸ”“load_dataset(self)
    PureSubZeroTrainer : ğŸ”“build_similarity_model(self)
    PureSubZeroTrainer : ğŸ”“get_response(self, user_input, threshold)
    PureSubZeroTrainer : ğŸ”“get_training_stats(self)
    class TrainingAnalytics:::medium-complexity
    TrainingAnalytics : +complexity: 7
    TrainingAnalytics : ğŸ”’__init__(self)
    TrainingAnalytics : ğŸ”“load_training_history(self)
    TrainingAnalytics : ğŸ”“analyze_training_progress(self)
    TrainingAnalytics : ğŸ”“analyze_conversation_patterns(self)
    TrainingAnalytics : ğŸ”“generate_training_report(self)
    TrainingAnalytics : ğŸ”“save_analytics_report(self, filename)
    TrainingAnalytics : ğŸ”“visualize_training_progress(self)
    class SimpleTrainingDemo:::medium-complexity
    SimpleTrainingDemo : +complexity: 6
    SimpleTrainingDemo : ğŸ”’__init__(self)
    SimpleTrainingDemo : ğŸ”“start_training_demo(self, duration_minutes)
    SimpleTrainingDemo : ğŸ”’_run_training_cycle(self, scenarios)
    SimpleTrainingDemo : ğŸ”’_estimate_quality(self, question, response...)
    SimpleTrainingDemo : ğŸ”’_show_current_stats(self, stage)
    SimpleTrainingDemo : ğŸ”’_show_improvement_summary(self)
    class TrainingOrchestrator:::high-complexity
    TrainingOrchestrator : +complexity: 11
    TrainingOrchestrator : ğŸ”’__init__(self)
    TrainingOrchestrator : ğŸ”“register_training_system(self, name, system)
    TrainingOrchestrator : ğŸ”“start_orchestrated_training(self)
    TrainingOrchestrator : ğŸ”“continuous_analytics(self)
    TrainingOrchestrator : ğŸ”“collect_performance_data(self)
    TrainingOrchestrator : ğŸ”“analyze_performance_trends(self)
    TrainingOrchestrator : ğŸ”“generate_optimization_recommendations(self, trends)
    TrainingOrchestrator : ğŸ”“display_analytics_insights(self, performance, trends...)
    TrainingOrchestrator : ğŸ”“apply_auto_optimizations(self, recommendations)
    TrainingOrchestrator : ğŸ”“generate_comprehensive_report(self)
    TrainingOrchestrator : ğŸ”“stop_orchestrated_training(self)
    class UseFlowDiagramGenerator:::medium-complexity
    UseFlowDiagramGenerator : +complexity: 9
    UseFlowDiagramGenerator : ğŸ”’__init__(self, project_root)
    UseFlowDiagramGenerator : ğŸ”“generate_user_journey_mermaid(self)
    UseFlowDiagramGenerator : ğŸ”“generate_use_case_mermaid(self)
    UseFlowDiagramGenerator : ğŸ”“generate_conversation_flow_mermaid(self)
    UseFlowDiagramGenerator : ğŸ”“generate_api_flow_mermaid(self)
    UseFlowDiagramGenerator : ğŸ”“generate_system_state_mermaid(self)
    UseFlowDiagramGenerator : ğŸ”“generate_data_flow_mermaid(self)
    UseFlowDiagramGenerator : ğŸ”“export_use_flow_diagrams(self)
    UseFlowDiagramGenerator : ğŸ”“generate_use_flow_html(self, diagrams)
    classDef high-complexity fill:#ff6b6b,stroke:#333,stroke-width:2px
    classDef medium-complexity fill:#ffd93d,stroke:#333,stroke-width:2px
    classDef low-complexity fill:#6bcf7f,stroke:#333,stroke-width:2px